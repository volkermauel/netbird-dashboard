name: CI
on:
  push:
    branches:
      - "feature/**"
      - main
    tags:
      - "**"
  pull_request:

env:
  REGISTRY_IMAGE: ghcr.io/volkermauel/netbird-dashboard

jobs:
  test_build_push:
    runs-on:
      - self-hosted
      - linux
    steps:
      - uses: actions/checkout@v3

      - name: setup-node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install --no-audit --no-fund
        env:
          NODE_OPTIONS: '--max-old-space-size=2048'

      - run: echo '{}' > .local-config.json

      - name: Build
        run: npm run build
        env:
          NODE_OPTIONS: '--max-old-space-size=2048'

      - name: Run E2E tests
        run: npx start-server-and-test 'npm start' http://localhost:3000 'npx cypress run'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: docker/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64,linux/arm
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
